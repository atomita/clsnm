{"version":3,"sources":["dist/clsnm.js"],"names":["global","factory","exports","module","define","amd","self","clsnm","this","entries","Object","obj","result","key","hasOwnProperty","push","concat","noop","classNames","mapper","filter","arr","apply","flat","_a","v","map","k","nested","length","nestedKey","Boolean","join"],"mappings":"CAKC,SAAUA,EAAQC,GACE,iBAAZC,SAA0C,oBAAXC,OAAyBA,OAAOD,QAAUD,IAC9D,mBAAXG,QAAyBA,OAAOC,IAAMD,OAAOH,IACnDD,EAASA,GAAUM,MAAaC,MAAQN,IAH3C,CAIEO,KAAM,WAAc,aAEpB,IAAIC,EAAUC,OAAOD,QACfC,OAAOD,QACP,SAAUE,GACR,IAAIC,EAAS,GACb,IAAK,IAAIC,KAAOF,EACRA,EAAIG,eAAeD,IACnBD,EAAOG,KAAK,CAACF,EAAKF,EAAIE,KAG9B,OAAOD,GAEXI,EAAS,GAAGA,OAIhB,SAASC,EAAKJ,GACV,OAAOA,EAEX,SAASK,EAAWP,EAAKQ,EAAQC,GAC7B,OAPJ,SAAcC,GACV,OAAOL,EAAOM,MAAM,GAAID,GAMjBE,CAAKd,EAAQE,GACfS,OAAO,SAAUI,GACVA,EAAG,GAAX,IAAeC,EAAID,EAAG,GACtB,OAAOJ,EAAOK,KAEbC,IAAI,SAAUF,GACf,IAAIG,EAAIH,EAAG,GAAIC,EAAID,EAAG,GAClBX,EAAMM,EAAOQ,GACjB,GAAI,iBAAoBF,EAAG,CACvB,IAAIG,EAASV,EAAWO,EAAGN,EAAQC,GACnC,GAAIQ,EAAOC,OACP,OAAOD,EAAOF,IAAI,SAAUI,GAAa,OAAOjB,EAAMiB,IAG9D,OAAOjB,KASf,OANA,SAAeF,EAAKQ,EAAQC,GAGxB,YAFe,IAAXD,IAAqBA,EAASF,QACnB,IAAXG,IAAqBA,EAASW,SAC3Bb,EAAWP,EAAKQ,EAAQC,GAAQY,KAAK","sourcesContent":["/*\nclsnm v0.0.1\nhttps://github.com/atomita/clsnm\nReleased under the MIT License.\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.clsnm = factory());\n}(this, function () { 'use strict';\n\n  var entries = Object.entries\r\n      ? Object.entries\r\n      : function (obj) {\r\n          var result = [];\r\n          for (var key in obj) {\r\n              if (obj.hasOwnProperty(key)) {\r\n                  result.push([key, obj[key]]);\r\n              }\r\n          }\r\n          return result;\r\n      };\r\n  var concat = [].concat;\r\n  function flat(arr) {\r\n      return concat.apply([], arr);\r\n  }\r\n  function noop(key) {\r\n      return key;\r\n  }\r\n  function classNames(obj, mapper, filter) {\r\n      return flat(entries(obj)\r\n          .filter(function (_a) {\r\n          var _ = _a[0], v = _a[1];\r\n          return filter(v);\r\n      })\r\n          .map(function (_a) {\r\n          var k = _a[0], v = _a[1];\r\n          var key = mapper(k);\r\n          if ('object' === typeof v) {\r\n              var nested = classNames(v, mapper, filter);\r\n              if (nested.length) {\r\n                  return nested.map(function (nestedKey) { return key + nestedKey; });\r\n              }\r\n          }\r\n          return key;\r\n      }));\r\n  }\r\n  function clsnm(obj, mapper, filter) {\r\n      if (mapper === void 0) { mapper = noop; }\r\n      if (filter === void 0) { filter = Boolean; }\r\n      return classNames(obj, mapper, filter).join(' ');\r\n  }\n\n  return clsnm;\n\n}));\n"]}